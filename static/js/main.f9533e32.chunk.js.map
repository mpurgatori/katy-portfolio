{"version":3,"sources":["assets/Underline_yellow.svg","assets/Underline_pink.svg","assets/Underline_blue.svg","assets/Brainiac_mockup_original.png","assets/Fixit_mockup_original.png","assets/Athena_mockup_original.png","assets/Athena_1.png","assets/Athena_2.png","assets/Athena_3.png","assets/Athena_4.png","assets/Katy_profile_clips.png","assets/Katy_profile_ROTATED.png","components/Main.jsx","components/Athena.jsx","components/About.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","panelGrid","paddingTop","spacing","paddingBottom","panel","height","text","color","fontFamily","fontSize","katy","fontWeight","period","panelContainer","breakpoints","up","padding","linkText","paddingLeft","links","textDecoration","textSemiBold","Panel","backGroundColor","link","title","underline","image","imgWidth","classes","Grid","className","xs","md","item","to","style","textAlign","backgroundColor","background","alt","width","src","Typography","variant","Main","checkPage","Fragment","Container","container","hello","pink","braniac","yellow","fixit","blue","athena","textExtraBold","minHeight","position","ulStyle","listStyle","Athena","Athena1","paddingRight","justify","Button","margin","onClick","goToAnchor","id","Athena2","Athena3","Athena4","aboutText","textConatiner","imageContainer","down","marginLeft","katyImage","left","top","katyRotated","WebkitTransform","MozTransformStyle","transform","About","windowXS","useWindowWidth","sm","KatyRotated","KatyClips","root","bottom","right","appBarColor","paperElevation","boxShadow","toolBar","ScrollTop","props","children","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","App","useState","aboutPage","setAboutPage","console","log","location","href","indexOf","CssBaseline","AppBar","colorPrimary","Toolbar","alignItems","htmlColor","path","Fab","size","aria-label","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f9533e32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Underline_yellow.c4ed6ca1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Underline_pink.23751cfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Underline_blue.71fef336.svg\";","module.exports = __webpack_public_path__ + \"static/media/Brainiac_mockup_original.4e4cee39.png\";","module.exports = __webpack_public_path__ + \"static/media/Fixit_mockup_original.5370844f.png\";","module.exports = __webpack_public_path__ + \"static/media/Athena_mockup_original.997163d0.png\";","module.exports = __webpack_public_path__ + \"static/media/Athena_1.29534bb0.png\";","module.exports = __webpack_public_path__ + \"static/media/Athena_2.f3dec07d.png\";","module.exports = __webpack_public_path__ + \"static/media/Athena_3.81fe19ee.png\";","module.exports = __webpack_public_path__ + \"static/media/Athena_4.2ad53895.png\";","module.exports = __webpack_public_path__ + \"static/media/Katy_profile_clips.2d9ac058.png\";","module.exports = __webpack_public_path__ + \"static/media/Katy_profile_ROTATED.8ca6f785.png\";","import { Container, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport pink from \"../assets/Underline_pink.svg\";\nimport blue from \"../assets/Underline_blue.svg\";\nimport yellow from \"../assets/Underline_yellow.svg\";\nimport braniac from \"../assets/Brainiac_mockup_original.png\";\nimport fixit from \"../assets/Fixit_mockup_original.png\";\nimport athena from \"../assets/Athena_mockup_original.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  panelGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  panel: {\n    height: 400,\n  },\n  text: {\n    color: \"#333333\",\n    fontFamily: \"'Nunito Sans', sans-serif\",\n    fontSize: \"2.3em\",\n  },\n  katy: {\n    color: \"#90ccf4\",\n    fontWeight: 800,\n  },\n  period: {\n    color: \"#f78888\",\n    fontWeight: 600,\n  },\n  panelContainer: {\n    paddingTop: 5,\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: 15,\n    },\n  },\n  linkText: {\n    color: \"#333333\",\n    fontFamily: \"'Nunito Sans', sans-serif\",\n    paddingTop: 20,\n    paddingLeft: 10,\n  },\n  links: {\n    textDecoration: \"none\",\n  },\n  textSemiBold: {\n    fontWeight: 600,\n  },\n}));\n\nconst Panel = ({\n  backGroundColor,\n  link,\n  title,\n  underline,\n  image,\n  imgWidth,\n}) => {\n  const classes = useStyles();\n  return (\n    <Grid className={classes.panelContainer} xs={12} md={4} item>\n      <Link className={classes.links} to={`/${link}`}>\n        <Grid\n          style={{\n            paddingTop: 20,\n            textAlign: \"center\",\n            backgroundColor: backGroundColor,\n            background: `linear-gradient(0deg, ${backGroundColor} 55%, rgba(255,255,255,1) 170%)`,\n          }}\n          className={classes.panel}\n        >\n          <img alt=\"\" width={imgWidth} src={image} />\n        </Grid>\n        <Typography variant=\"h4\" className={classes.linkText}>\n          {title}\n        </Typography>\n        <img alt=\"\" width=\"30%\" src={underline} />\n      </Link>\n    </Grid>\n  );\n};\n\nconst Main = ({ checkPage }) => {\n  const classes = useStyles();\n  checkPage(false);\n  return (\n    <React.Fragment>\n      <main>\n        <Container style={{ paddingTop: 0 }} className={classes.panelGrid}>\n          <Grid style={{ paddingBottom: 50 }} container>\n            <Grid className={`${classes.text} ${classes.hello}`}>\n              Hello there,&nbsp;\n            </Grid>\n            <Grid className={`${classes.text} ${classes.katy}`}>I'm Katy</Grid>\n            <Grid className={`${classes.text} ${classes.period}`}>.</Grid>\n            <Grid\n              container\n              className={`${classes.text} ${classes.textSemiBold} ${classes.hello}`}\n            >\n              UX designer / psychologist / storyteller\n            </Grid>\n          </Grid>\n          <Grid container spacing={4}>\n            <Panel\n              backGroundColor={\"#f78888\"}\n              link=\"athena\"\n              title=\"Braniac\"\n              underline={pink}\n              image={braniac}\n              imgWidth=\"84%\"\n            />\n            <Panel\n              backGroundColor={\"#f3d250\"}\n              link=\"other1\"\n              title=\"Fixit\"\n              underline={yellow}\n              image={fixit}\n              imgWidth=\"70%\"\n            />\n            <Panel\n              backGroundColor={\"#90ccf4\"}\n              link=\"other2\"\n              title=\"Athena\"\n              underline={blue}\n              image={athena}\n              imgWidth=\"70%\"\n            />\n          </Grid>\n        </Container>\n      </main>\n    </React.Fragment>\n  );\n};\nexport default Main;\n","import { makeStyles, Grid, Typography, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport Athena1 from \"../assets/Athena_1.png\";\nimport Athena2 from \"../assets/Athena_2.png\";\nimport Athena3 from \"../assets/Athena_3.png\";\nimport Athena4 from \"../assets/Athena_4.png\";\nimport ScrollableAnchor, { goToAnchor } from \"react-scrollable-anchor\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    color: \"#000\",\n    fontFamily: \"'Nunito', sans-serif\",\n  },\n  textExtraBold: {\n    fontWeight: 800,\n  },\n  textSemiBold: {\n    fontWeight: 600,\n  },\n  panel: {\n    minHeight: 500,\n    position: \"relative\",\n  },\n  ulStyle: {\n    listStyle: \"none\",\n  },\n}));\n\nexport default function Athena() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <main>\n        <div style={{ textAlign: \"center\", backgroundColor: \"#ffffff\" }}>\n          <img alt=\"\" width=\"100%\" src={Athena1} />\n\n          {/* Navigating the page */}\n          <Grid style={{ paddingRight: 10, paddingLeft: 10 }}>\n            <Grid className={classes.panel} container>\n              <Grid xs={12} justify=\"center\" container>\n                <Grid xs={6}>\n                  <Typography\n                    variant=\"h3\"\n                    style={{ paddingTop: 50, textAlign: \"center\" }}\n                    className={`${classes.text} ${classes.textExtraBold}`}\n                  >\n                    Finding your way around\n                  </Typography>\n                  <Typography\n                    style={{ padding: 50 }}\n                    className={`${classes.text} ${classes.textSemiBold}`}\n                    variant=\"h5\"\n                  >\n                    This case study is divided into 3 sections. If you’re\n                    interested in a particular part of the process, feel free to\n                    jump right in!\n                  </Typography>\n                  <Grid justify=\"center\" container>\n                    <Grid item>\n                      <Button\n                        style={{\n                          backgroundColor: \"#f78888\",\n                          margin: 20,\n                          padding: 10,\n                          width: \"80%\",\n                        }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => goToAnchor(\"research\")}\n                      >\n                        Research\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        style={{\n                          backgroundColor: \"#f78888\",\n                          margin: 20,\n                          padding: 10,\n                          width: \"80%\",\n                        }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => goToAnchor(\"discoveries\")}\n                      >\n                        Discoveries\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        style={{\n                          backgroundColor: \"#f78888\",\n                          margin: 20,\n                          padding: 10,\n                          width: \"80%\",\n                        }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => goToAnchor(\"solutions\")}\n                      >\n                        Solutions\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <ScrollableAnchor id={\"research\"}>\n            <img alt=\"\" width=\"100%\" src={Athena2} />\n          </ScrollableAnchor>\n          <ScrollableAnchor id={\"discoveries\"}>\n            <img alt=\"\" width=\"100%\" src={Athena3} />\n          </ScrollableAnchor>\n          <ScrollableAnchor id={\"solutions\"}>\n            <img alt=\"\" width=\"100%\" src={Athena4} />\n          </ScrollableAnchor>\n        </div>\n      </main>\n    </React.Fragment>\n  );\n}\n","import Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport KatyClips from \"../assets/Katy_profile_clips.png\";\nimport { useWindowWidth } from \"@react-hook/window-size\";\nimport KatyRotated from \"../assets/Katy_profile_ROTATED.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    color: \"#333333\",\n    fontFamily: \"'Nunito Sans', sans-serif\",\n    fontSize: \"2.3em\",\n  },\n  katy: {\n    color: \"#90ccf4\",\n    fontWeight: 800,\n  },\n  period: {\n    color: \"#f78888\",\n    fontWeight: 600,\n  },\n  textExtraBold: {\n    fontWeight: 800,\n  },\n  textSemiBold: {\n    fontWeight: 600,\n  },\n  aboutText: {\n    paddingBottom: 20,\n  },\n  textConatiner: {\n    padding: \"5px 20px 0 20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: \"20%\",\n    },\n  },\n  imageContainer: {\n    textAlign: \"center\",\n    position: \"relative\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: -35,\n    },\n  },\n  katyImage: {\n    position: \"absolute\",\n    left: 70,\n    top: -110,\n  },\n  katyRotated: {\n    WebkitTransform: \"rotate(270deg)\",\n    MozTransformStyle: \"rotate(270deg)\",\n    transform: \"rotate(90deg)\",\n  },\n}));\n\nconst About = ({ checkPage }) => {\n  const classes = useStyles();\n\n  const windowWidth = useWindowWidth();\n\n  const windowXS = windowWidth < 600;\n\n  checkPage(true);\n\n  return (\n    <React.Fragment>\n      <Grid container>\n        <Grid className={classes.imageContainer} xs={12} sm={6} item>\n          {windowXS ? (\n            <img\n              alt=\"Katy On Clip\"\n              className={classes.katyRotated}\n              width=\"80%\"\n              src={KatyRotated}\n            />\n          ) : (\n            <img\n              alt=\"Katy On Clip Horizontal\"\n              className={classes.katyImage}\n              width=\"80%\"\n              src={KatyClips}\n            />\n          )}\n        </Grid>\n        <Grid className={classes.textConatiner} xs={12} sm={5} item>\n          <Grid style={{ paddingBottom: 50 }} container>\n            <Grid className={`${classes.text} ${classes.textExtraBold}`}>\n              Hello there,&nbsp;\n            </Grid>\n            <Grid className={`${classes.text} ${classes.katy}`}>I'm Katy</Grid>\n            <Grid className={`${classes.text} ${classes.period}`}>.</Grid>\n          </Grid>\n          <Typography className={classes.aboutText} variant=\"h5\">\n            I’m a UX designer with a creative eye and a passion for\n            understanding what makes people tick\n          </Typography>\n          <Typography className={classes.aboutText} variant=\"h5\">\n            I have a degree in psychology and a masters in social & cognitive\n            neuroscience (journal publication pending - oo, fancy!)\n          </Typography>\n          <Typography className={classes.aboutText} variant=\"h5\">\n            Balancing a logical mindset with genuine empathy, I draw rich\n            insights from people’s stories and translate them into intuitive\n            designs\n          </Typography>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default About;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Main from \"./components/Main\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport Athena from \"./components/Athena\";\n// import Fixit from \"./components/Fixit\";\nimport About from \"./components/About\";\nimport yellow from \"./assets/Underline_yellow.svg\";\nimport { useWindowWidth } from \"@react-hook/window-size\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  appBarColor: {\n    backgroundColor: \"transparent\",\n  },\n  paperElevation: {\n    boxShadow: \"none\",\n  },\n  links: {\n    textDecoration: \"none\",\n    \"&:focus, &:hover, &:visited, &:link, &:active\": {\n      textDecoration: \"none\",\n    },\n    color: \"#333333\",\n    fontSize: \"1.6em\",\n    padding: \"10px 10px 0 10px\",\n    fontFamily: \"'Nunito Sans', sans-serif\",\n    fontWeight: 400,\n  },\n  toolBar: {\n    padding: \"40px 30px 20px\",\n  },\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function App(props) {\n  const classes = useStyles();\n\n  const windowWidth = useWindowWidth();\n\n  const windowXS = windowWidth < 600;\n\n  const [aboutPage, setAboutPage] = useState();\n\n  const checkPage = (aboutPage) => {\n    return setAboutPage(aboutPage);\n  };\n\n  console.log(window.location.href, window.location.href.indexOf(\"about\") > -1);\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Router>\n        <AppBar\n          position=\"relative\"\n          classes={{\n            colorPrimary: classes.appBarColor,\n            root: classes.paperElevation,\n          }}\n        >\n          <Toolbar className={classes.toolBar}>\n            <Grid justify=\"flex-end\" container>\n              <Grid item>\n                <Grid alignItems=\"center\" container>\n                  <Grid>\n                    <Link className={classes.links} to=\"/\">\n                      Work\n                    </Link>\n                  </Grid>\n                  {!aboutPage && (\n                    <img\n                      alt=\"\"\n                      style={{ position: \"absolute\", top: 75 }}\n                      width={windowXS ? \"15%\" : \"6%\"}\n                      src={yellow}\n                    />\n                  )}\n                  <Grid>\n                    <Link className={classes.links} to=\"/about\">\n                      About\n                    </Link>\n                  </Grid>\n                  {aboutPage && (\n                    <img\n                      alt=\"\"\n                      style={{ position: \"absolute\", top: 75, right: 85 }}\n                      width={windowXS ? \"15%\" : \"6%\"}\n                      src={yellow}\n                    />\n                  )}\n                  <Grid>\n                    <a\n                      className={classes.links}\n                      href=\"https://www.linkedin.com/in/katy-romney/\"\n                      target=\"blank\"\n                    >\n                      <LinkedInIcon fontSize=\"large\" htmlColor=\"#0099dc\" />\n                    </a>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Toolbar style={{ minHeight: 1 }} id=\"back-to-top-anchor\" />\n        <Grid>\n          {props.children}\n\n          <Switch>\n            <Route path=\"/about\">\n              <About checkPage={checkPage} />\n            </Route>\n            <Route path=\"/athena\">\n              <Athena />\n            </Route>\n            <Route path=\"/other1\">\n              <Athena />\n            </Route>\n            <Route path=\"/other2\">\n              <Athena />\n            </Route>\n            <Route path=\"/\">\n              <Main checkPage={checkPage} />\n            </Route>\n          </Switch>\n        </Grid>\n      </Router>\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}